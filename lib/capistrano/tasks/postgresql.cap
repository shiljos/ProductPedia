namespace :postgresql do
  
  desc "Install the latest stable release do PostgreSQL"
  task :install do
    on roles(:db) do
      execute :sudo, "add-apt-repository", "-y", "ppa:pitti/postgresql"
      execute :sudo, "apt-get", "-y", "update"
      execute :sudo, "apt-get", "-y", "install", "postgresql", "libpq-dev"
	  end
  end
  
  after "deploy:install", :install


	desc "Create a database for this application"
	task :create_database do
    on roles(:db) do
      postgresql_database = fetch(:full_app_name)
      postgresql_user = fetch(:application)
      postgresql_password = 'secret'
       
      execute :sudo, "-u", "postgres", "psql", "-c", %Q{"drop database #{postgresql_database};"}
      execute :sudo, "-u", "postgres", "psql", "-c", %Q{"drop role #{postgresql_user};"}
      execute :sudo, "-u", "postgres", "psql", "-c", %Q{"create user #{postgresql_user} with password '#{postgresql_password}';"}
  	  execute :sudo, "-u", "postgres", "psql", "-c", %Q{"create database #{postgresql_database} owner #{postgresql_user};"}
    end
	end
	after "deploy:setup_config", "postgresql:create_database"

  	# desc "Generate the database.yml configuration file."
   #    task :setup do
   #      on roles(:app) do
   #        #execute :mkdir, "-p", "/home/deployer/apps/dep_app/shared/config"
   #        smart_template "postgresql.yml.erb", "database.yml"
   #      end
   #  end
   #  before "deploy:starting", "postgresql:setup"

	# desc "Symlink the database.yml file into latest release"
	#   task :symlink, roles: :app do
	#     execute "ln -nfs #{shared_path}/config/database.yml #{release_path}/config/database.yml"
	#   end
	# after "deploy:finalize_update", "postgresql:symlink"
end